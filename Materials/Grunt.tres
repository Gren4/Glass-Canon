[gd_resource type="ShaderMaterial" load_steps=19 format=2]

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeScalarUniform" id=7]
uniform_name = "Diss"

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=10]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeVectorOp" id=11]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=12]
constant = Color( 1, 0.75309, 0, 1 )

[sub_resource type="VisualShaderNodeScalarConstant" id=18]
constant = 0.2

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0.0451355, 0.184041, 0.226563, 1 )

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=19]
noise = SubResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = SubResource( 19 )

[sub_resource type="VisualShaderNodeInput" id=13]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=15]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=16]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=17]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShader" id=5]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx;

uniform sampler2D tex_frg_3;
uniform float Diss;



void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(0.045136, 0.184041, 0.226563);
	float n_out2p1 = 1.000000;

// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out4p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// ScalarUniform:11
	float n_out11p0 = Diss;

// ScalarFunc:5
	float n_out5p0 = cos(n_out11p0);

// ScalarOp:6
	float n_in6p1 = 2.00000;
	float n_out6p0 = n_out5p0 / n_in6p1;

// ScalarOp:7
	float n_in7p1 = 0.00000;
	float n_out7p0 = n_out6p0 + n_in7p1;

// ScalarOp:8
	float n_out8p0 = dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)) - n_out7p0;

// ScalarFunc:10
	float n_out10p0 = round(n_out8p0);

// Scalar:17
	float n_out17p0 = 0.200000;

// ScalarOp:12
	float n_in12p1 = 0.05000;
	float n_out12p0 = n_out8p0 - n_in12p1;

// ScalarOp:13
	float n_in13p0 = 1.00000;
	float n_out13p0 = n_in13p0 - n_out12p0;

// ScalarFunc:14
	float n_out14p0 = round(n_out13p0);

// Color:16
	vec3 n_out16p0 = vec3(1.000000, 0.753090, 0.000000);
	float n_out16p1 = 1.000000;

// VectorOp:15
	vec3 n_out15p0 = vec3(n_out14p0) * n_out16p0;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out10p0;
	ROUGHNESS = n_out17p0;
	EMISSION = n_out15p0;

}

void light() {
// Output:0

}
"
modes/cull = 2
modes/depth_draw = 3
nodes/fragment/0/position = Vector2( 1040, 100 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 140, 80 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -360, 60 )
nodes/fragment/4/node = SubResource( 13 )
nodes/fragment/4/position = Vector2( -600, 200 )
nodes/fragment/5/node = SubResource( 14 )
nodes/fragment/5/position = Vector2( -660, 400 )
nodes/fragment/6/node = SubResource( 15 )
nodes/fragment/6/position = Vector2( -460, 400 )
nodes/fragment/7/node = SubResource( 16 )
nodes/fragment/7/position = Vector2( -280, 400 )
nodes/fragment/8/node = SubResource( 17 )
nodes/fragment/8/position = Vector2( -100, 240 )
nodes/fragment/10/node = SubResource( 6 )
nodes/fragment/10/position = Vector2( 120, 180 )
nodes/fragment/11/node = SubResource( 7 )
nodes/fragment/11/position = Vector2( -860, 400 )
nodes/fragment/12/node = SubResource( 8 )
nodes/fragment/12/position = Vector2( 140, 420 )
nodes/fragment/13/node = SubResource( 9 )
nodes/fragment/13/position = Vector2( 380, 420 )
nodes/fragment/14/node = SubResource( 10 )
nodes/fragment/14/position = Vector2( 560, 380 )
nodes/fragment/15/node = SubResource( 11 )
nodes/fragment/15/position = Vector2( 800, 440 )
nodes/fragment/16/node = SubResource( 12 )
nodes/fragment/16/position = Vector2( 500, 600 )
nodes/fragment/17/node = SubResource( 18 )
nodes/fragment/17/position = Vector2( 733.209, 223.898 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 4, 0, 3, 0, 5, 0, 6, 0, 3, 0, 8, 0, 8, 0, 10, 0, 6, 0, 7, 0, 7, 0, 8, 1, 11, 0, 5, 0, 8, 0, 12, 0, 12, 0, 13, 1, 13, 0, 14, 0, 14, 0, 15, 0, 16, 0, 15, 1, 15, 0, 0, 5, 10, 0, 0, 1, 17, 0, 0, 3 )

[resource]
resource_local_to_scene = true
shader = SubResource( 5 )
shader_param/Diss = 3.0
